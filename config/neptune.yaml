project: adamhart/keras-clean
open-webbrowser: false
name: Examples
tags: ['best', 'augment-tests', 'remove-img-tests', 'relu-elu', 'dropout-spatialdroput']

parameters:
  # Resources
  nbr_workers: 2

  # Input pipe parameters (Normalization is based in the parameter network_type)
  aug_crop_flip: false
  aug_affine: true
  aug_intensity_seq: true
  aug_mask_smooth: false

  # Use these options to resize
  aug_resize_128: false
  aug_resize_228: false
  img_size: 101
  data_path: '/hdd/datasets/TGS/'
  batch_size: 128

  learning_rate: 0.1
  model_dir: '/hdd/datasets/TGS/keras_trained'
  optimizer: 'SGD'  # 'SGD', 'Adam', 'RMSprop'
  train_epochs: 150
  resume_from:
  freeze_encoder_ratio: 0.0  # How long to freeze the encoder (ratio of epochs)
  decoder_activation: 'relu'
  use_batchnorm: true
  use_dropout: true

  ### Loss (0 turns off) ###
  loss_dice_weight: 1.0 # [0.0, 0.5, 1.0]
  loss_bce_weight: 1.0 # [0.0, 0.5, 1.0]
  loss_lovaz_weight: 1.0 # [0.0, 0.5, 1.0]
  focal_loss_weight: 0.00 # [0.0, 1.0]
  focal_loss_alpha: 
  focal_loss_gamma:

  ### Metric ###
  monitor_metric: 'iou_kaggle_metric'  # 'iou_kaggle_metric' or 'accuracy'

  ### Callback settings ###
  early_stopping: false
  early_stopping_patience: 75

  reduce_lr_on_plateau: true
  rlop_factor: 0.1
  rlop_patience: 6
  rlop_min_lr: 0.00001

  tensorboard: true

  # vgg16_regular, vgg19_regular, res34_resnet, res50_resnet, simple101_simple101
  encoder_decoder: 'res34_resnet'
  # encoder_type: 'vgg16' # ['vgg16' 'vgg19' 'res50' 'simple101']
  # decoder_type: 'regular' # 'regular', 'simple101'
  hyper_concat: false # [true, false]  # State whether or not to use hyper-concat at the end of the decoder

  ### Data ###
  remove_blank_images: false
  remove_bad_masks: false
  validation_split: 0.08
  kfold: 
  kfold_nbr: 

metric:
  channel: 'iou_kaggle_metric'
  goal: maximize

exclude:
  - output
  - cache
  - neptune.log
  - offline_job.log
  - .git
  - .idea
  - .ipynb_checkpoints
  - Dockerfiles/base.Dockerfile
  - token